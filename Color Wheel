var dots = [], post, target, vel, spring, speed; 
var animate = false, open = false, ctx;

function setup() {
  ctx = createCanvas(windowWidth, windowHeight);
  ctx.touchStarted(flip);
 
  colorMode(HSB, 255); 
	background(0);
  noStroke();
  	
	translate(width/2, height/2);

  pos = new p5.Vector(0,0);
	target = new p5.Vector(0,0);
	vel = new p5.Vector(0,0);
	spring= 0.9;
  speed = 0.015;

  var maxDots = 12;
  var startHue = 1;
  
	for (var i=0; i<maxDots; i++) {
	  var 	offsetAngle = (2*PI)/maxDots;
		var angle = offsetAngle;											
		var radius = 150;

		target = new p5.Vector(radius*sin(angle*i),radius*cos(angle*i));
	
		var dot = new Dot(pos.x, pos.y, target, startHue+(i*20));
		dots.push(dot);
		dot.render(); 
	}
}

function draw() {
  translate(width/2, height/2);
  fill(0,0,0,120);
  rect(-windowWidth/2,-windowHeight/2, windowWidth, windowHeight);
  
	if(animate == true){
  fill(0,0,0,120);
  rect(-windowWidth/2,-windowHeight/2, windowWidth, windowHeight);
		for(var i =0; i < dots.length; i ++) {
			var p = dots[i];
				if (open) {
					target.set(0,0);					
				}
      	else {
					target.set(p.target.x, p.target.y);
				}
						
			pos.set(p.posX, p.posY);
			vel.set(p.velX, p.velY);
			vel.mult(spring);
				
			var diff = p5.Vector.sub(target, pos);
			diff.mult(speed);
			vel.add(diff);
			pos.add(vel);

			p.posX = pos.x;
			p.posY = pos.y;
			
			p.velX = vel.x;
			p.velY = vel.y;
				
			p.render();
	 	}
	}
  else{
  for(var i =0; i < dots.length; i ++) {
			var p = dots[i];
    			p.render();
	 	}
  }
	noStroke();
	chosen=get(mouseX,mouseY);
  fill(255);
  var box="RGBa: "+ chosen
  text(box,200,50)
  //the RGB values of the color the mouse is over are displayed
}

function setText (id, newText) {
	var e = document.getElementById (id);
	e.innerHTML = newText;
}

function flip() {
    if (!animate){
			animate = true;			
		} else {
			if (!open) {
				open = true;
								
			} else if (open) {
				open = false;
			}
		}
}
// function touchStarted() {
// 	  flip();			
// 	}

// the dots 
function Dot(posx, posy,t,h) {

	this.posX = posx; 
	this.posY = posy; 
	
	this.target = new p5.Vector(0,0,0);
	this.target.set(t);
	this.velX = 0; 
	this.velY = 0; 	
	this.size = 80; 	
  this.hue = h;
			
	this.render = function() {
    fill(h, 100,100);
		ellipse(this.posX, this.posY, this.size,this.size);					
	}
}


